{"version":3,"sources":["UI/EditableLabel/EdittableLabel.js","task-card/card-container/CardContainer.js","icons/close_black_24dp.svg","task-card/card-header/CardHeader.js","task-card/TaskCard.js","task-board/TaskBoard.js","task-list/TaskList.js","conteiner/Conteiner.js","UI/Button.js","icons/add_box_black_24dp.svg","icons/style_black_24dp.svg","header/Header.js","App.js","index.js"],"names":["EdittableLabel","props","text","onChange","placeholder","className","useState","inputValue","setInputValue","isEditable","setIsEditable","autoFocus","onBlur","event","target","value","onDoubleClick","e","CardConteiner","id","description","changeTask","useContext","Context","CardHeader","title","removeTask","onClick","src","closeIcon","alt","TaskCard","task","date","bindCard","ref","useRef","useEffect","current","TaskBoard","cards","tasks","map","card","i","TaskList","cardScrollIntoView","active","index","Container","taskListActive","setTaskListActive","Button","icon","children","Header","addEmptyTask","logo","addIcon","React","createContext","createTask","Date","now","dateRFC","getDate","getMonth","getFullYear","getHours","getMinutes","App","setTasks","Provider","filter","localStorage","removeItem","forEach","setItem","JSON","stringify","scrollIntoView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86d61f1a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './EdittableLabel.css'\r\n\r\nfunction EdittableLabel(props) {\r\n\tlet { text, onChange, placeholder, className } = props;\r\n\r\n\tlet [inputValue, setInputValue] = useState(\"\")\r\n\r\n\tlet [isEditable, setIsEditable] = useState(!text)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\t!isEditable ?\r\n\t\t\t\t\t<div className=\"edittable-label\" onDoubleClick={(e) => { setIsEditable(true); setInputValue(text) }}>{text}</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tautoFocus={text ? true : false}\r\n\t\t\t\t\t\tclassName={`edittable-label__input ${className}`}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tonBlur={\r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tif (inputValue) {\r\n\t\t\t\t\t\t\t\t\tonChange(inputValue);\r\n\t\t\t\t\t\t\t\t\tsetIsEditable(false)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\tevent => setInputValue(event.target.value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EdittableLabel;","import React, { useContext } from \"react\";\r\nimport './CardContainer.css'\r\nimport { Context } from \"../../App\";\r\nimport EdittableLabel from \"../../UI/EditableLabel/EdittableLabel\";\r\n\r\nfunction CardConteiner(props) {\r\n\tlet { id, description } = props;\r\n\r\n\tconst { changeTask } = useContext(Context);\r\n\r\n\treturn (\r\n\t\t<div className={`card-container ${props.className}`}>\r\n\t\t\t<EdittableLabel text={description} placeholder=\"Enter description\" onChange={(text) => changeTask({ id: id, description: text })} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardConteiner;","export default __webpack_public_path__ + \"static/media/close_black_24dp.244b6687.svg\";","import React, { useContext } from 'react'\r\nimport './CardHeader.css'\r\nimport closeIcon from '../../icons/close_black_24dp.svg'\r\nimport { Context } from '../../App'\r\nimport EdittableLabel from '../../UI/EditableLabel/EdittableLabel'\r\n\r\nfunction CardHeader(props) {\r\n\tlet { title, id } = props\r\n\r\n\tconst { removeTask, changeTask } = useContext(Context)\r\n\r\n\treturn (\r\n\t\t<div className=\"card-header\">\r\n\t\t\t<EdittableLabel className=\"title-input\" text={title} placeholder=\"Enter task\" onChange={(text) => changeTask({ id: id, title: text })} />\r\n\t\t\t<button onClick={() => removeTask(id)}>\r\n\t\t\t\t<img className=\"icon-close\" src={closeIcon} alt=\"\" />\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardHeader;","import React, { useContext, useEffect, useRef } from 'react'\r\nimport CardConteiner from './card-container/CardContainer';\r\nimport CardHeader from './card-header/CardHeader';\r\nimport './TaskCard.css'\r\nimport { Context } from \"../App\";\r\nfunction TaskCard(props) {\r\n\tconst { title, description, date, id } = props.task\r\n\r\n\tlet { bindCard } = useContext(Context)\r\n\r\n\tlet ref = useRef(\"testing ref\")\r\n\r\n\tuseEffect(() => {\r\n\t\tbindCard(id, ref.current)\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t<div ref={ref} className={`task-card ${props.className}`}>\r\n\t\t\t<CardHeader title={title} id={id} />\r\n\t\t\t<CardConteiner className=\"task-card__card-container\" id={id} description={description} />\r\n\t\t\t<div className=\"task-card__date\">{date}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TaskCard;","import React from \"react\";\r\nimport TaskCard from \"../task-card/TaskCard\";\r\nimport './TaskBoard.css'\r\n\r\n\r\nfunction TaskBoard(props) {\r\n\r\n\tlet cards = props.tasks;\r\n\r\n\treturn (\r\n\t\t<div className={`task-board ${props.className}`}>\r\n\t\t\t{\r\n\t\t\t\tcards.map((card, i) => {\r\n\t\t\t\t\treturn <TaskCard className=\"task-board__task-card\" key={card.id} task={card} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TaskBoard;","import React, { useContext } from \"react\";\r\nimport './TaskList.css'\r\nimport { Context } from \"../App\";\r\n\r\nfunction TaskList(props) {\r\n\r\n\tlet { tasks } = props;\r\n\r\n\tlet { cardScrollIntoView } = useContext(Context);\r\n\r\n\treturn (\r\n\t\t<div className={`task-list ${props.active ? \"task-list_active\" : \"\"} ${props.className}`}>\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\ttasks.map((task, index) => {\r\n\t\t\t\t\t\treturn <li key={task.id}>\r\n\t\t\t\t\t\t\t<button className=\"task-list__element\" onClick={() => { cardScrollIntoView(task.id) }}>\r\n\t\t\t\t\t\t\t\t{index + 1}.\r\n\t\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t\t{task.title ? task.title : \"no title\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TaskList;","import React, { useState } from \"react\";\r\nimport TaskBoard from \"../task-board/TaskBoard\";\r\nimport TaskList from \"../task-list/TaskList\";\r\nimport \"./Conteiner.css\"\r\n\r\n\r\n\r\n\r\nfunction Container(props) {\r\n\r\n\r\n\r\n\r\n\tlet [taskListActive, setTaskListActive] = useState(true)\r\n\r\n\r\n\treturn (\r\n\t\t<div className={`container ${props.className}`}>\r\n\t\t\t<button className={`burger ${taskListActive ? \"burger-active\" : \"\"}`} onClick={() => setTaskListActive(!taskListActive)}>\r\n\t\t\t\t<span className=\"burger-line\"></span>\r\n\t\t\t\t<span className=\"burger-line\"></span>\r\n\t\t\t\t<span className=\"burger-line\"></span>\r\n\t\t\t</button>\r\n\t\t\t<TaskList tasks={props.tasks} active={taskListActive} />\r\n\t\t\t<TaskBoard tasks={props.tasks} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Container;","import React from 'react'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`button ${props.className}`}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{props.icon ? <img src={props.icon} alt=\"\" /> : \"\"}\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/add_box_black_24dp.d95f9f60.svg\";","export default __webpack_public_path__ + \"static/media/style_black_24dp.62f4a594.svg\";","import React, { useContext } from 'react'\r\nimport Button from '../UI/Button'\r\nimport './Header.css'\r\nimport addIcon from '../icons/add_box_black_24dp.svg'\r\nimport logo from '../icons/style_black_24dp.svg'\r\nimport { Context } from '../App'\r\n\r\nfunction Header(props) {\r\n\tlet { addEmptyTask } = useContext(Context)\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<span className=\"header__logo\">\r\n\t\t\t\t<img src={logo} alt=\"\" />\r\n\t\t\t\tTODO app\r\n\t\t\t</span>\r\n\t\t\t<Button className=\"header__button\" icon={addIcon} onClick={() => addEmptyTask()}>Add TODO</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react'\nimport Container from './conteiner/Conteiner';\nimport Header from './header/Header';\n\nconst Context = React.createContext();\n\nfunction createTask(title, description, id = Date.now()) {\n\tlet date = new Date(Date.now());\n\tlet dateRFC = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}_${date.getHours()}:${date.getMinutes()}`;\n\treturn {\n\t\tid: id,\n\t\ttitle: title,\n\t\tdescription: description,\n\t\tdate: dateRFC\n\t}\n}\n\nfunction App() {\n\n\t// let ls = [];\n\t// if (localStorage.length) {\n\t// \tfor (let i = 0; i < localStorage.length; i++) {\n\t// \t\tlet key = localStorage.key(i);\n\t// \t\tls.push(JSON.parse(localStorage.getItem(key)))\n\t// \t}\n\t// }\n\n\tlet [tasks, setTasks] = useState(\n\t\t// let [tasks, setTasks] = useState(localStorage.length > 0 ? ls :\n\t\t[\n\t\t\tcreateTask(\"\", \"\", 1),\n\t\t\tcreateTask(\"task No 2\", \"Second task.\", 2),\n\t\t\tcreateTask(\"task No 3\", \"Third task.\", 3)\n\t\t]\n\t)\n\n\tfunction addEmptyTask() {\n\t\tsetTasks([createTask(\"\", \"\"), ...tasks])\n\t}\n\n\tfunction removeTask(id) {\n\t\tsetTasks(tasks.filter(task => task.id !== id))\n\t\tlocalStorage.removeItem(id)\n\t}\n\n\tfunction changeTask({ id = false, title = \"\", description = \"\" }) {\n\t\tif (id) {\n\t\t\ttasks.forEach(task => {\n\t\t\t\tif (task.id === id) {\n\t\t\t\t\tif (title) task.title = title;\n\t\t\t\t\tif (description) task.description = description;\n\t\t\t\t\tlocalStorage.setItem(id, JSON.stringify({ id: task.id, title: task.title, description: task.description, date: task.date }))\n\t\t\t\t}\n\t\t\t})\n\t\t\tsetTasks([...tasks])\n\t\t}\n\t}\n\n\tfunction bindCard(id, card) {\n\t\ttasks.forEach(task => {\n\t\t\tif (task.id === id) {\n\t\t\t\ttask.card = card;\n\t\t\t}\n\t\t})\n\t\tsetTasks([...tasks])\n\t}\n\n\tfunction cardScrollIntoView(id) {\n\t\ttasks.forEach(task => {\n\t\t\tif (task.id === id) {\n\t\t\t\ttask.card.scrollIntoView()\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<Context.Provider value={{ removeTask, addEmptyTask, changeTask, bindCard, cardScrollIntoView }}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Container className=\"App__container\" tasks={tasks} />\n\t\t\t</div>\n\t\t</Context.Provider>\n\t);\n}\n\nexport default App;\nexport { Context };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}